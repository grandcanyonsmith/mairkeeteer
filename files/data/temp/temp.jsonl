{"step": "Reminder of items left in the cart", "step_number": 1, "call_to_action": "Click the link below to complete your purchase of course creator pro and start learning how to create and sell online courses today!", "hook": "\n\"Unlock Your Potential: Learn How to Create Your Own Course\""}
{"step": "Offer a discount or incentive to complete the purchase", "step_number": 2, "call_to_action": "Take advantage of this limited-time offer and get instant access to course creator pro today!", "hook": "\n\"Unlock the Secrets of Course Creation: Nurture Your Leads Now!\""}
{"step": "Final reminder and call to action to complete the purchase", "step_number": 3, "call_to_action": "Act now and get instant access to course creator pro! unlock the secrets to creating and selling successful online courses and start making money today!", "hook": "\n\"Unlock the Secrets of Course Creation: Nurture Your Leads Now!\""}



import json
import sys

sys.path.append("../..")  # Adds higher directory to python modules path.
from scripts.utils.formatter import StringFormatter
from scripts.utils.get_values import (
    append_key_value_to_json_file,
    get_key_values_from_temp_json_file,
    _openai_response,
)
from scripts.utils.openai_secret_manager import (
    OpenAiSecretManager as openai_secret_manager,
)


class ValuePropositionsCreator:
    def __init__(self):
        self.formatter = StringFormatter()

    def create_value_propositions(
        self, background_info, desired_outcome, step, total_steps
    ):
        prompt = f'''Background information:\n"""\n{background_info}\n"""\n\nDesired Outcome:\n"""\n{desired_outcome}\n"""\n\nNumber of emails in the email sequence:\n"""\n{total_steps}\n"""\n\nStep:\n"""\n{step}\n"""\n\nWhat should the value proposition be for this email?\n"""\n'''  # noqa: E501  # noqa: E501
        response = _openai_response(prompt)
        return self.formatter.format_everything(response.split("\n"))


if __name__ == "__main__":
    temp_json_file = "/Users/canyonsmith/Documents/GitHub/autogluon/mairkeeteer/files/data/temp/temp.jsonl"
    value_propositions_creator = ValuePropositionsCreator()
    background_info = "\n".join(
        [
            "I sell online courses that teach people how to sell online courses",
            "It is called Course Creator Pro",
        ]
    )
    desired_outcome = "\n".join(
        [
            "People just watched my webinar",
            "I want to send them an email sequence that will get them to buy my course",
        ]
    )
    steps = get_key_values_from_temp_json_file("step")
    print(len(steps))
    value_propositions = []
    for step in steps:
        value_propositions += value_propositions_creator.create_value_propositions(
            background_info, desired_outcome, step, len(steps)
        )
    print(value_propositions)

    append_key_value_to_json_file(
        "value_proposition", value_propositions, temp_json_file
    )
